/* XboxWebApi-1.0.vapi generated by valac 0.40.15, do not modify. */

namespace XboxWebApi {
	namespace Authentication {
		namespace Model {
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class WindowsLiveAuthenticationQuery {
				public WindowsLiveAuthenticationQuery (string response_type = WindowsLiveConstants.LOGIN_AUTH_RESPONSE_TYPE, string scope = WindowsLiveConstants.LOGIN_AUTH_SCOPE, string redirect_uri = WindowsLiveConstants.LOGIN_REDIRECT_URL, string client_id = WindowsLiveConstants.CLIENT_ID, string display = WindowsLiveConstants.DISPLAY, string locale = WindowsLiveConstants.LOCALE);
				public GLib.HashTable<string,string> get_query ();
				public string client_id { get; internal set; }
				public string display { get; internal set; }
				public string locale { get; internal set; }
				public string redirect_uri { get; internal set; }
				public string response_type { get; internal set; }
				public string scope { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class WindowsLiveRefreshQuery {
				public WindowsLiveRefreshQuery (XboxWebApi.Authentication.Token.RefreshToken refresh_token, string grant_type = WindowsLiveConstants.LOGIN_GRANT_TYPE, string client_id = WindowsLiveConstants.CLIENT_ID, string scope = WindowsLiveConstants.LOGIN_AUTH_SCOPE);
				public GLib.HashTable<string,string> get_query ();
				public string client_id { get; internal set; }
				public string grant_type { get; internal set; }
				public string refresh_token { get; internal set; }
				public string scope { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class WindowsLiveResponse : GLib.Object {
				public WindowsLiveResponse ();
				public WindowsLiveResponse.from_query (GLib.HashTable<string,string> query_params);
				public string to_string ();
				public string access_token { get; set; }
				public GLib.DateTime creation_time { get; private set; }
				public int expires_in { get; set; }
				public string refresh_token { get; set; }
				public string scope { get; set; }
				public string token_type { get; set; }
				public string user_id { get; set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XASDProperties {
				public XASDProperties (string auth_method, string site_name, string rps_ticket);
				public string auth_method { get; internal set; }
				public string rps_ticket { get; internal set; }
				public string site_name { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XASDRequest {
				public XASDRequest (XboxWebApi.Authentication.Token.AccessToken access_token, string relying_party = "http://auth.xboxlive.com", string token_type = "JWT", string auth_method = "RPS", string site_name = "user.auth.xboxlive.com");
				public XboxWebApi.Authentication.Model.XASDProperties properties { get; internal set; }
				public string relying_party { get; internal set; }
				public string token_type { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XASResponse {
				public Gee.HashMap<string,Gee.List<XboxWebApi.Authentication.Model.XboxUserInformation>> display_claims;
				public GLib.DateTime issue_instant;
				public GLib.DateTime not_after;
				public string token;
				public XASResponse ();
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XASTProperties {
				public XASTProperties (string auth_method, string device_token, string site_name, string rps_ticket);
				public string auth_method { get; internal set; }
				public string device_token { get; internal set; }
				public string rps_ticket { get; internal set; }
				public string site_name { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XASTRequest {
				public XASTRequest (XboxWebApi.Authentication.Token.AccessToken access_token, XboxWebApi.Authentication.Token.DeviceToken device_token, string relying_party = "http://auth.xboxlive.com", string token_type = "JWT", string auth_method = "RPS", string site_name = "user.auth.xboxlive.com");
				public XboxWebApi.Authentication.Model.XASTProperties properties { get; internal set; }
				public string relying_party { get; internal set; }
				public string token_type { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XASUProperties {
				public XASUProperties (string auth_nethod, string site_name, string rps_ticket);
				public string auth_nethod { get; internal set; }
				public string rps_ticket { get; internal set; }
				public string site_name { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XASURequest {
				public XASURequest (XboxWebApi.Authentication.Token.AccessToken access_token, string relying_party = "http://auth.xboxlive.com", string token_type = "JWT", string auth_method = "RPS", string site_name = "user.auth.xboxlive.com");
				public XboxWebApi.Authentication.Model.XASUProperties properties { get; internal set; }
				public string relying_party { get; internal set; }
				public string token_type { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XSTSProperties {
				public XSTSProperties (string user_token, string sandbox_id, string device_token, string title_token);
				public string device_token { get; set; }
				public string sandbox_id { get; set; }
				public string title_token { get; set; }
				public string[] user_tokens { get; set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XSTSRequest {
				public XSTSRequest (XboxWebApi.Authentication.Token.UserToken user_token, string relying_party = "http://xboxlive.com", string token_type = "JWT", string sandbox_id = "RETAIL", XboxWebApi.Authentication.Token.DeviceToken device_token, XboxWebApi.Authentication.Token.TitleToken title_token);
				public XboxWebApi.Authentication.Model.XSTSProperties properties { get; internal set; }
				public string relying_party { get; internal set; }
				public string token_type { get; internal set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XboxUserInformation {
				public string age_group;
				public string gamertag;
				public string privileges;
				public string user_hash;
				public string user_settings_restrictions;
				public string user_title_restrictions;
				public ulong xbox_user_id;
				public XboxUserInformation ();
				public string to_string ();
			}
		}
		namespace Token {
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class AccessToken : XboxWebApi.Authentication.Token.BaseAuthToken {
				public AccessToken ();
				public AccessToken.from_windows_live_response (XboxWebApi.Authentication.Model.WindowsLiveResponse response);
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class BaseAuthToken : GLib.Object {
				public BaseAuthToken ();
				public BaseAuthToken.from_xasresponse (XboxWebApi.Authentication.Model.XASResponse token_response);
				public bool has_user_information ();
				public bool is_valid ();
				public string to_string ();
				public GLib.DateTime expires { get; set; }
				public GLib.DateTime issued { get; set; }
				public string jwt { get; set; }
				public XboxWebApi.Authentication.Model.XboxUserInformation user_information { get; set; }
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class DeviceToken : XboxWebApi.Authentication.Token.BaseAuthToken {
				public DeviceToken ();
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class RefreshToken : XboxWebApi.Authentication.Token.BaseAuthToken {
				public RefreshToken ();
				public RefreshToken.from_windows_live_response (XboxWebApi.Authentication.Model.WindowsLiveResponse response);
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class TitleToken : XboxWebApi.Authentication.Token.BaseAuthToken {
				public TitleToken ();
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class UserToken : XboxWebApi.Authentication.Token.BaseAuthToken {
				public UserToken ();
			}
			[CCode (cheader_filename = "XboxWebApi.h")]
			public class XToken : XboxWebApi.Authentication.Token.BaseAuthToken {
				public XToken ();
			}
		}
		namespace WindowsLiveConstants {
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string CLIENT_ID;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string DISPLAY;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOCALE;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOGIN_AUTHORIZE_PATH;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOGIN_AUTH_RESPONSE_TYPE;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOGIN_AUTH_SCOPE;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOGIN_GRANT_TYPE;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOGIN_REDIRECT_URL;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOGIN_REFRESH_TOKEN_PATH;
			[CCode (cheader_filename = "XboxWebApi.h")]
			public const string LOGIN_SERVICE_URL;
		}
		[CCode (cheader_filename = "XboxWebApi.h")]
		public class AuthenticationService {
			public AuthenticationService ();
			public bool authenticate ();
			public AuthenticationService.from_windows_live_response (XboxWebApi.Authentication.Model.WindowsLiveResponse response);
			public string get_authentication_url ();
			public XboxWebApi.Authentication.Model.WindowsLiveResponse refresh_live_token_async (XboxWebApi.Authentication.Token.RefreshToken refresh_token) throws GLib.Error;
			public AuthenticationService.with_tokens (XboxWebApi.Authentication.Token.AccessToken access_token, XboxWebApi.Authentication.Token.RefreshToken refresh_token);
			public XboxWebApi.Authentication.Token.AccessToken access_token { get; set; }
			public XboxWebApi.Authentication.Token.DeviceToken device_token { get; set; }
			public XboxWebApi.Authentication.Token.RefreshToken refresh_token { get; set; }
			public XboxWebApi.Authentication.Token.TitleToken title_token { get; set; }
			public XboxWebApi.Authentication.Model.XboxUserInformation user_information { get; set; }
			public XboxWebApi.Authentication.Token.UserToken user_token { get; set; }
			public XboxWebApi.Authentication.Token.XToken x_token { get; set; }
		}
	}
}
